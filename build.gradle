apply plugin: 'java'
apply plugin: 'maven-publish'

repositories {
    mavenCentral()
    maven {
        url "http://mc.hackerzlair.org:8888/repository/public"
        allowInsecureProtocol = true
    }
    maven {
        url = "http://repo.extendedclip.com/content/repositories/placeholderapi/"
        allowInsecureProtocol = true
    }
 }
 
dependencies {
    compileOnly  ("org.spigotmc:spigot-1.16.5:+")
    compileOnly  ("org.spigotmc:spigot-1.16.3R:+")
    compileOnly  ("org.spigotmc:spigot-1.16.1R:+")
    compileOnly  ("org.spigotmc:spigot-1.15.2:+") 
    compileOnly  ("org.spigotmc:spigot-1.14.4:+") 
    compileOnly  ("org.spigotmc:spigot-1.13.2:+") 
    compileOnly  ("org.spigotmc:spigot-1.12.2:+") 
    compileOnly  ("com.massivecraft:massivecore:+")
    compileOnly  ("com.massivecraft:factions:+")
    compileOnly  ("com.gmail.filoghost:holographicdisplays:+")
    compileOnly  ("com.comphenix:protocol:+")
    compileOnly  ("com.garbagemule:mobarena:+")
    compileOnly  ("com.sk89q:worldedit:+")
    compileOnly  ("com.sk89q:worldguard:+")
    compileOnly  ("fr.neatmonster:nocheatplus:+")
    compileOnly  ("me.blackvein:quests:+")
    compileOnly  ("me.libraryaddict:disguise:+")
    compileOnly  ("net.citizensnpcs:citizens:+")
    compileOnly  ("think:rpgitems:3.8.6")
    compileOnly  ("com.palmergames.bukkit.towny:Towny:+")
    compileOnly  ("io.lumine.xikage:mythicmobs:4.12.0")
    compileOnly  ("me.clip:placeholderapi:+")
}

processResources {
    duplicatesStrategy = 'include'
    print("Process properties....")
    Properties p1=new Properties()
    File pf1=new File("$project.projectDir/gradle.properties")
    if(pf1.exists())
    {
        p1.load(pf1.newDataInputStream())
        project.version = p1.artver
        project.group = p1.group
        println("Done!")
    }
    else
    {
        println("Warning! gradle.properties file is missing!")
    }
    
    print("Process resources....")
    inputs.property "version", project.version
    from (sourceSets.main.resources.srcDirs) {
            include "plugin.yml"
            expand "version": project.version
    }

    from (sourceSets.main.resources.srcDirs) {
            exclude "plugin.yml"
    }
    println("Done!")
}

compileJava {
    dependsOn clean
    
    doLast {
        print("Create POM file....")
	subprojects {
	  group = 'com.mythicmobsextension'
	  task generatePom << { pom { }.writeTo("./build/libs/"+project.name+"-"+project.version+".xml")
        println("Done!")}}
    }
    
}
